{"ast":null,"code":"import { getStoredCard } from \"../utilities/fakedb\";\nexport const productsAndCartLoader = async () => {\n  //gets product data\n  const productsData = await fetch('products.json');\n  const products = await productsData.json();\n\n  //get card\n  const savedCard = getStoredCard();\n  for (const id in savedCard) {\n    const addedProduct = products.find(product => product.id === id);\n    if (addedProduct) {\n      const quantity = savedCard[id];\n      console.log(id, quantity);\n    }\n  }\n  return products;\n};","map":{"version":3,"names":["getStoredCard","productsAndCartLoader","productsData","fetch","products","json","savedCard","id","addedProduct","find","product","quantity","console","log"],"sources":["/Users/mac/Documents/WebDevelopment/Projects/Ema-Johns/src/Loaders/productsAnsCartLoader.js"],"sourcesContent":["import { getStoredCard } from \"../utilities/fakedb\";\n\nexport const productsAndCartLoader = async () => {\n    //gets product data\n    const productsData = await fetch('products.json');\n    const products = await productsData.json();\n\n    //get card\n    const savedCard = getStoredCard();\n\n    for (const id in savedCard){\n        const addedProduct = products.find(product => product.id === id);\n        if(addedProduct){\n            const quantity = savedCard[id];\n            console.log(id, quantity);\n        }\n    }\n    return products;\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,qBAAqB;AAEnD,OAAO,MAAMC,qBAAqB,GAAG,YAAY;EAC7C;EACA,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;EACjD,MAAMC,QAAQ,GAAG,MAAMF,YAAY,CAACG,IAAI,EAAE;;EAE1C;EACA,MAAMC,SAAS,GAAGN,aAAa,EAAE;EAEjC,KAAK,MAAMO,EAAE,IAAID,SAAS,EAAC;IACvB,MAAME,YAAY,GAAGJ,QAAQ,CAACK,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACH,EAAE,KAAKA,EAAE,CAAC;IAChE,IAAGC,YAAY,EAAC;MACZ,MAAMG,QAAQ,GAAGL,SAAS,CAACC,EAAE,CAAC;MAC9BK,OAAO,CAACC,GAAG,CAACN,EAAE,EAAEI,QAAQ,CAAC;IAC7B;EACJ;EACA,OAAOP,QAAQ;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}